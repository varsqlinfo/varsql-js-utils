{"version":3,"file":"varsql.db.util.js","mappings":"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","sources":["webpack://VARSQLUtils/webpack/universalModuleDefinition","webpack://VARSQLUtils/./src/constants.ts","webpack://VARSQLUtils/./src/core/DefaultChecker.ts","webpack://VARSQLUtils/./src/core/EndCheckTokenInfo.ts","webpack://VARSQLUtils/./src/core/Splitter.ts","webpack://VARSQLUtils/./src/core/TextCheckTokenInfo.ts","webpack://VARSQLUtils/./src/core/create/CreateChecker.ts","webpack://VARSQLUtils/./src/core/create/CreateFunctionChecker.ts","webpack://VARSQLUtils/./src/core/create/CreateProcedureChecker.ts","webpack://VARSQLUtils/./src/core/create/CreateTriggerCheckerr.ts","webpack://VARSQLUtils/./src/db/standard.splitter.ts","webpack://VARSQLUtils/./src/index.ts","webpack://VARSQLUtils/./src/splitOptions.ts","webpack://VARSQLUtils/./src/sqlSplitter.ts","webpack://VARSQLUtils/./src/utils.ts","webpack://VARSQLUtils/webpack/bootstrap","webpack://VARSQLUtils/webpack/before-startup","webpack://VARSQLUtils/webpack/startup","webpack://VARSQLUtils/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VARSQLUtils\"] = factory();\n\telse\n\t\troot[\"VARSQLUtils\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_END_SPLITTER = exports.CREATE_END_CHECK_KEYWORD = exports.DEFAULT_TEXT_CHECK_TOKEN = exports.TAB_CHAR = exports.LINE_CHAR = void 0;\r\nconst CreateChecker_1 = __importDefault(require(\"./core/create/CreateChecker\"));\r\nconst CreateFunctionChecker_1 = __importDefault(require(\"./core/create/CreateFunctionChecker\"));\r\nconst CreateTriggerCheckerr_1 = __importDefault(require(\"./core/create/CreateTriggerCheckerr\"));\r\nconst CreateProcedureChecker_1 = __importDefault(require(\"./core/create/CreateProcedureChecker\"));\r\nconst DefaultChecker_1 = __importDefault(require(\"./core/DefaultChecker\"));\r\n// line char\r\nexports.LINE_CHAR = '\\n';\r\n// tab char\r\nexports.TAB_CHAR = '\\t';\r\nexports.DEFAULT_TEXT_CHECK_TOKEN = {\r\n    \"'\": {\r\n        keepWord: true,\r\n        checkEnd(beforeCh1, c1, c2) {\r\n            return beforeCh1 != \"\\\\\" && c1 == \"'\";\r\n        },\r\n    },\r\n    '\"': {\r\n        keepWord: true,\r\n        checkEnd(beforeCh1, c1, c2) {\r\n            return beforeCh1 != \"\\\\\" && c1 == '\"';\r\n        },\r\n    },\r\n    \"--\": {\r\n        keepWord: true,\r\n        endToken: exports.LINE_CHAR,\r\n    },\r\n    \"/*\": {\r\n        keepWord: true,\r\n        endToken: \"*/\",\r\n    },\r\n    \"#{\": {\r\n        keepWord: true,\r\n        endToken: \"}\",\r\n    },\r\n    \"${\": {\r\n        keepWord: true,\r\n        endToken: \"}\",\r\n    },\r\n};\r\nexports.CREATE_END_CHECK_KEYWORD = {\r\n    'if': {\r\n        end: 'if'\r\n    },\r\n    'loop': {\r\n        end: 'loop'\r\n    },\r\n    'case': {\r\n        end: ''\r\n    }\r\n};\r\nexports.DEFAULT_END_SPLITTER = {\r\n    'default': new DefaultChecker_1.default(),\r\n    'create': new CreateChecker_1.default(),\r\n    'create_function': new CreateFunctionChecker_1.default(exports.CREATE_END_CHECK_KEYWORD),\r\n    'create_trigger': new CreateTriggerCheckerr_1.default(exports.CREATE_END_CHECK_KEYWORD),\r\n    'create_procedure': new CreateProcedureChecker_1.default(exports.CREATE_END_CHECK_KEYWORD)\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst constants_1 = require(\"../constants\");\r\n// create function check token\r\nclass DefaultChecker {\r\n    constructor() {\r\n        this.lineCount = 0;\r\n    }\r\n    init() {\r\n        this.lineCount = 0;\r\n    }\r\n    checkEnd(word, beforeWord, c1, beforeCh1, i, sql) {\r\n        if (/\\s/.test(c1)) {\r\n            if (this.lineCount > 0 && c1 == constants_1.LINE_CHAR) {\r\n                this.lineCount += 1;\r\n            }\r\n            else if (c1 == constants_1.LINE_CHAR) {\r\n                this.lineCount = 1;\r\n            }\r\n            return this.lineCount > 2 ? true : false; // 공백 2줄 이상이면 분리\r\n        }\r\n        this.lineCount = 0;\r\n        if (beforeCh1 == constants_1.LINE_CHAR && beforeCh1 == c1) {\r\n            return true;\r\n        }\r\n        return c1 == \";\";\r\n    }\r\n}\r\nexports.default = DefaultChecker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EndCheckTokenInfo = void 0;\r\nclass EndCheckTokenInfo {\r\n    constructor(tokens) {\r\n        this.tokens = {};\r\n        this.tokens = tokens;\r\n    }\r\n    put(key, value) {\r\n        this.tokens[key] = value;\r\n        return this;\r\n    }\r\n    hasKey(key) {\r\n        return this.tokens.hasOwnProperty(key);\r\n    }\r\n    get(key) {\r\n        let endCheck = this.tokens[key];\r\n        endCheck.init();\r\n        return endCheck;\r\n    }\r\n}\r\nexports.EndCheckTokenInfo = EndCheckTokenInfo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = require(\"../utils\");\r\nconst constants_1 = require(\"../constants\");\r\nclass Splitter {\r\n    constructor(cfg) {\r\n        this.cfg = cfg;\r\n        let checker = this.checker();\r\n        this.textChecker = checker.textChecker;\r\n        this.endChecker = checker.endChecker;\r\n    }\r\n    checker() {\r\n        throw new Error('checker() not implemented by subclass');\r\n    }\r\n    split(sql, findLine, findCharPos) {\r\n        findLine = typeof findLine == 'undefined' ? -1 : findLine;\r\n        findCharPos = typeof findCharPos == 'undefined' ? -1 : findCharPos;\r\n        let statementList = [];\r\n        let statement = [];\r\n        let g_idx = 0;\r\n        let sqlLen = sql.length;\r\n        let lineIdx = 0;\r\n        let startLine = 0;\r\n        let startCharPos = 0;\r\n        let c1 = '', c2 = '';\r\n        let beforeCh1;\r\n        let orginCh;\r\n        let startCommand = false;\r\n        let command = '';\r\n        let word = '';\r\n        let beforeWord = '';\r\n        let endCheckerInter = null;\r\n        let textCheckerInter = null;\r\n        let currentEndTokenKey = '';\r\n        let lineStartCharIdx = 0;\r\n        let overflowFlag = false; //찾는 문자 영역을 벋어 났는지 여부\r\n        let overflowNextSplitChk = false; // 찾는 문자 라인에 쿼리가 있는지 여부\r\n        for (let i = 0; i < sqlLen; i++) {\r\n            beforeCh1 = c1; // 이전 값 넣기.\r\n            orginCh = sql.charAt(i);\r\n            c1 = orginCh.toLowerCase();\r\n            c2 = c1 + ((i + 1) < sqlLen ? sql.charAt(i + 1) : '0');\r\n            c2 = c2.toLowerCase();\r\n            if (c1 == constants_1.LINE_CHAR) {\r\n                lineStartCharIdx = i;\r\n                ++lineIdx;\r\n            }\r\n            if (c1 == beforeCh1) {\r\n                g_idx++;\r\n                if (g_idx > 1000) {\r\n                    console.log('split error');\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                g_idx = 0;\r\n            }\r\n            if (textCheckerInter == null) {\r\n                if (this.textChecker.hasKey(c2) || this.textChecker.hasKey(c1)) {\r\n                    textCheckerInter = this.textChecker.get(c2) || this.textChecker.get(c1);\r\n                    if (textCheckerInter.keepWord !== false)\r\n                        statement.push(orginCh);\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                let check = false;\r\n                if (textCheckerInter.checkEnd && textCheckerInter.checkEnd(beforeCh1, c1, c2)) {\r\n                    check = true;\r\n                }\r\n                else if (textCheckerInter.endToken == c2 || textCheckerInter.endToken == c1) {\r\n                    check = true;\r\n                }\r\n                if (check) {\r\n                    if (textCheckerInter.keepWord === false) {\r\n                        i += (textCheckerInter.endToken ? textCheckerInter.endToken.length - 1 : 0);\r\n                    }\r\n                    else {\r\n                        statement.push(orginCh);\r\n                    }\r\n                    textCheckerInter = null;\r\n                }\r\n                else {\r\n                    if (textCheckerInter.keepWord !== false)\r\n                        statement.push(orginCh);\r\n                }\r\n                continue;\r\n            }\r\n            statement.push(orginCh);\r\n            /*\r\n            if(/[(),]/.test(c1)){\r\n                continue;\r\n            }\r\n            */\r\n            // 공백체크. ( 체크 \r\n            if (/[\\s(]/.test(c1)) {\r\n                if (startCommand)\r\n                    startCommand = false;\r\n                beforeWord = word;\r\n                word = '';\r\n            }\r\n            else {\r\n                if (command == '') {\r\n                    if (/[;/!@#$%^&()+=?\\-]/.test(c1)) { // command 시작 문자가 특수 문자면 command로 처리 안함. \r\n                        continue;\r\n                    }\r\n                    startLine = lineIdx;\r\n                    startCharPos = i - lineStartCharIdx;\r\n                    startCommand = true;\r\n                }\r\n                if (startCommand) {\r\n                    command += c1;\r\n                }\r\n                word += c1;\r\n            }\r\n            if (startCommand === false && endCheckerInter == null && command != '') {\r\n                currentEndTokenKey = command;\r\n                if (this.endChecker.hasKey(command)) {\r\n                    endCheckerInter = this.endChecker.get(command);\r\n                }\r\n                else {\r\n                    endCheckerInter = this.endChecker.get('default');\r\n                }\r\n            }\r\n            else {\r\n                if (this.endChecker.hasKey(currentEndTokenKey + '_' + word)) {\r\n                    currentEndTokenKey = currentEndTokenKey + '_' + word;\r\n                    endCheckerInter = this.endChecker.get(currentEndTokenKey);\r\n                }\r\n            }\r\n            if (!overflowNextSplitChk && !overflowFlag && (findLine != -1 && (lineIdx >= findLine && findCharPos <= i - lineStartCharIdx))) {\r\n                overflowFlag = true;\r\n                if (command.trim() == '' && statementList.length > 0) {\r\n                    let newLineIdx = sql.indexOf(constants_1.LINE_CHAR, i + 1);\r\n                    if (newLineIdx > -1) { // 라인 끝 체크, 체크 해서 문자가 있으면 다음 query 리턴하게 처리.\r\n                        let lineStr = sql.substring(i + 1, newLineIdx);\r\n                        lineStr = (0, utils_1.trim)(lineStr);\r\n                        let firstChar = lineStr.charAt(0);\r\n                        if (lineStr != '' && !/[;/!@#$%^&()+=?\\-]/.test(firstChar)) {\r\n                            overflowNextSplitChk = true;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    return [statementList[statementList.length - 1]];\r\n                }\r\n            }\r\n            if ((endCheckerInter && endCheckerInter.checkEnd(word, beforeWord, c1, beforeCh1, i, sql)) || i + 1 == sqlLen) {\r\n                let sqlSplitInfo = {\r\n                    command: command,\r\n                    startLine: startLine,\r\n                    startCharPos: startCharPos,\r\n                    endLine: lineIdx,\r\n                    endCharPos: i - lineStartCharIdx,\r\n                    statement: statement.join('')\r\n                };\r\n                //console.log(endCheckerInter, sqlSplitInfo)\r\n                if (overflowFlag) {\r\n                    return [sqlSplitInfo];\r\n                }\r\n                if (findLine != -1) {\r\n                    if (startLine <= findLine && findLine <= lineIdx) { // 라인이 다를경우\r\n                        if (startLine == lineIdx && findLine == lineIdx) {\r\n                            if (startCharPos <= findCharPos && findCharPos <= sqlSplitInfo.endCharPos) {\r\n                                return [sqlSplitInfo];\r\n                            }\r\n                        }\r\n                        else {\r\n                            return [sqlSplitInfo];\r\n                        }\r\n                    }\r\n                }\r\n                statementList.push(sqlSplitInfo);\r\n                command = '';\r\n                word == '';\r\n                statement = [];\r\n                endCheckerInter = null;\r\n                startCommand = false;\r\n            }\r\n        }\r\n        return statementList;\r\n    }\r\n}\r\nexports.default = Splitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TextCheckTokenInfo = void 0;\r\nclass TextCheckTokenInfo {\r\n    constructor(tokens) {\r\n        this.tokens = tokens;\r\n    }\r\n    put(key, value) {\r\n        this.tokens[key] = value;\r\n        return this;\r\n    }\r\n    hasKey(key) {\r\n        return this.tokens.hasOwnProperty(key);\r\n    }\r\n    get(key) {\r\n        return this.tokens[key];\r\n    }\r\n}\r\nexports.TextCheckTokenInfo = TextCheckTokenInfo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// create check token\r\nclass CreateChecker {\r\n    constructor() {\r\n        this.idx = 0;\r\n    }\r\n    init() {\r\n        this.idx = 0;\r\n    }\r\n    checkEnd(word, beforeWord, c1, beforeCh1, i, sql) {\r\n        return c1 == '/' || c1 == ';';\r\n    }\r\n}\r\nexports.default = CreateChecker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// create function check token\r\nclass CreateFunctionChecker {\r\n    constructor(endCheckKeywords) {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n        this.endCheckKeywords = endCheckKeywords;\r\n    }\r\n    init() {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n    }\r\n    checkEnd(word, beforeWord, c1, beforeCh1, i, sql) {\r\n        if ('begin' == word) {\r\n            this.begin = true;\r\n        }\r\n        else if (this.endCheckKeywords.hasOwnProperty(word)) {\r\n            if ('end' == beforeWord) {\r\n                this.tokenStack.pop();\r\n            }\r\n            else {\r\n                this.tokenStack.push(this.endCheckKeywords[word]);\r\n            }\r\n        }\r\n        else if ('end' == word) {\r\n            let popItem = this.tokenStack[this.tokenStack.length - 1];\r\n            if (popItem && popItem.end == '') {\r\n                this.tokenStack.pop();\r\n            }\r\n            this.endFlag = this.tokenStack.length == 0;\r\n        }\r\n        if (this.begin && this.endFlag && c1 == ';') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.default = CreateFunctionChecker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// create function check token\r\nclass CreateProcedureChecker {\r\n    constructor(endCheckKeywords) {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n        this.endCheckKeywords = endCheckKeywords;\r\n    }\r\n    init() {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n    }\r\n    checkEnd(word, beforeWord, c1, beforeCh1, i, sql) {\r\n        if ('begin' == word) {\r\n            this.begin = true;\r\n        }\r\n        else if (this.endCheckKeywords.hasOwnProperty(word)) {\r\n            if ('end' == beforeWord) {\r\n                this.tokenStack.pop();\r\n            }\r\n            else {\r\n                this.tokenStack.push(this.endCheckKeywords[word]);\r\n            }\r\n        }\r\n        else if ('end' == word) {\r\n            var popItem = this.tokenStack[this.tokenStack.length - 1];\r\n            if (popItem && popItem.end == '') {\r\n                this.tokenStack.pop();\r\n            }\r\n            this.endFlag = this.tokenStack.length == 0;\r\n        }\r\n        if (this.begin && this.endFlag && c1 == ';') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.default = CreateProcedureChecker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// create function check token\r\nclass CreateTriggerCheckerr {\r\n    constructor(endCheckKeywords) {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n        this.endCheckKeywords = endCheckKeywords;\r\n    }\r\n    init() {\r\n        this.begin = false;\r\n        this.endFlag = false;\r\n        this.tokenStack = [];\r\n    }\r\n    checkEnd(word, beforeWord, c1, beforeCh1, i, sql) {\r\n        if ('begin' == word) {\r\n            this.begin = true;\r\n        }\r\n        else if (this.endCheckKeywords.hasOwnProperty(word)) {\r\n            if ('end' == beforeWord) {\r\n                this.tokenStack.pop();\r\n            }\r\n            else {\r\n                this.tokenStack.push(this.endCheckKeywords[word]);\r\n            }\r\n        }\r\n        else if ('end' == word) {\r\n            var popItem = this.tokenStack[this.tokenStack.length - 1];\r\n            if (popItem && popItem.end == '') {\r\n                this.tokenStack.pop();\r\n            }\r\n            this.endFlag = this.tokenStack.length == 0;\r\n        }\r\n        if (this.begin && this.endFlag && c1 == ';') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.default = CreateTriggerCheckerr;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst constants_1 = require(\"../constants\");\r\nconst Splitter_1 = __importDefault(require(\"../core/Splitter\"));\r\nconst TextCheckTokenInfo_1 = require(\"../core/TextCheckTokenInfo\");\r\nconst EndCheckTokenInfo_1 = require(\"../core/EndCheckTokenInfo\");\r\nclass StandardSplitter extends Splitter_1.default {\r\n    checker() {\r\n        return {\r\n            textChecker: new TextCheckTokenInfo_1.TextCheckTokenInfo(constants_1.DEFAULT_TEXT_CHECK_TOKEN),\r\n            endChecker: new EndCheckTokenInfo_1.EndCheckTokenInfo(constants_1.DEFAULT_END_SPLITTER),\r\n        };\r\n    }\r\n}\r\nexports.default = StandardSplitter;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./sqlSplitter\"), exports);\r\n__exportStar(require(\"./splitOptions\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.split = void 0;\r\nconst standard_splitter_1 = __importDefault(require(\"./db/standard.splitter\"));\r\nlet splitters = {\r\n    standard: standard_splitter_1.default,\r\n};\r\n// default option\r\nconst defaultOptions = {\r\n    language: \"standard\",\r\n    keepComment: true,\r\n    findLine: -1,\r\n    findCharPos: -1,\r\n};\r\n// split function\r\nconst split = (sql, cfg = {}) => {\r\n    if (typeof sql !== \"string\") {\r\n        throw new Error(\"Invalid sql argument. Expected string, instead got \" + typeof sql);\r\n    }\r\n    const options = Object.assign(Object.assign({}, defaultOptions), cfg);\r\n    const Splitter = splitters[options.language];\r\n    return new Splitter(options).split(sql, cfg.findLine, cfg.findCharPos);\r\n};\r\nexports.split = split;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.equalizeWhitespace = exports.trim = exports.isNumber = void 0;\r\nconst isNumber = (value) => typeof value === 'number';\r\nexports.isNumber = isNumber;\r\n// string trim\r\nconst trim = (s) => {\r\n    return s.replace(/^\\s+|\\s+$/g, \"\");\r\n};\r\nexports.trim = trim;\r\n// space -> ' '\r\nconst equalizeWhitespace = (s) => {\r\n    return (0, exports.trim)(s).replace(/\\s+/gu, ' ');\r\n};\r\nexports.equalizeWhitespace = equalizeWhitespace;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","DEFAULT_END_SPLITTER","CREATE_END_CHECK_KEYWORD","DEFAULT_TEXT_CHECK_TOKEN","TAB_CHAR","LINE_CHAR","CreateChecker_1","require","CreateFunctionChecker_1","CreateTriggerCheckerr_1","CreateProcedureChecker_1","DefaultChecker_1","keepWord","checkEnd","beforeCh1","c1","c2","endToken","end","constants_1","DefaultChecker","lineCount","word","beforeWord","i","sql","test","EndCheckTokenInfo","tokens","key","hasOwnProperty","endCheck","init","utils_1","Splitter","cfg","checker","textChecker","endChecker","Error","findLine","findCharPos","statementList","statement","g_idx","sqlLen","length","lineIdx","startLine","startCharPos","orginCh","startCommand","command","endCheckerInter","textCheckerInter","currentEndTokenKey","lineStartCharIdx","overflowFlag","overflowNextSplitChk","charAt","toLowerCase","console","log","hasKey","get","push","check","trim","newLineIdx","indexOf","lineStr","substring","firstChar","sqlSplitInfo","endLine","endCharPos","join","TextCheckTokenInfo","CreateChecker","idx","CreateFunctionChecker","endCheckKeywords","begin","endFlag","tokenStack","pop","popItem","CreateProcedureChecker","CreateTriggerCheckerr","Splitter_1","TextCheckTokenInfo_1","EndCheckTokenInfo_1","StandardSplitter","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__exportStar","p","prototype","call","split","standard_splitter_1","splitters","standard","defaultOptions","language","keepComment","options","assign","equalizeWhitespace","isNumber","s","replace"],"sourceRoot":""}